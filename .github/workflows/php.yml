name: PHP Composer

on:
  push:
    branches:
    - '*'
    tags:
    - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: '5.x'

    - name: Execute GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.11

    - name: PHP Setup
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2'

    - name: Version variables for unstable builds
      id: unstable
      if: startsWith(github.ref, 'refs/tags/') != true
      env:
        LABEL: "-dev${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
      run: |
        echo "Pre-release: ${LABEL}"
        echo "::set-output name=label::${LABEL}"

    - name: Version stamp composer.json
      id: composer-version
      run: |
        COMPOSER_VERSION="${{ steps.gitversion.outputs.majorMinorPatch }}${{ steps.unstable.outputs.label }}"
        echo "Composer version: ${COMPOSER_VERSION}"
        echo "::set-output name=version::${COMPOSER_VERSION}"
        jq ".version=\"${COMPOSER_VERSION}\"" composer.json > composer.version.json # Add "version" property to composer.version.json
        mv composer.json composer.clean.json
        mv composer.version.json composer.json # Rename composer.version.json to composer.json

    - name: Create ZIP archive
      id: archive
      env:
        SEMVER: ${{ steps.gitversion.outputs.fullSemVer }}
      run: |
        ARCHIVE=${GITHUB_REPOSITORY#SwedbankPay/}-${SEMVER}.zip
        echo "Archive: ${ARCHIVE}"
        echo "::set-output name=name::${ARCHIVE}"
        zip --recurse-paths --exclude="*.zip" --exclude="vendor/*" --exclude="composer.clean.json" ${ARCHIVE} *
        unzip -l ${ARCHIVE}
        rm composer.json
        mv composer.clean.json composer.json # Move the version-less composer.json back in place so `composer validate` won't react on it in the script section.

    - name: Upload artifact
      uses: actions/upload-artifact@v2-preview
      with:
        name: ${{ steps.archive.outputs.name }}
        path: ${{ steps.archive.outputs.name }}

    - name: Validate M2 Package
      run: php ./vendor/validate_m2_package.php -d ${{ steps.archive.outputs.name }}

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Add auth.json
      run: |
        cat << EOF > auth.json
        {
          "http-basic": {
            "repo.magento.com": {
              "username": "${{ secrets.MAGENTO_PUBLIC_KEY }}",
              "password": "${{ secrets.MAGENTO_PRIVATE_KEY }}"
            }
          }
        }
        EOF

    - name: Cache dependencies
      uses: actions/cache@v2.1.6
      with:
        path: ./vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: PHPCS Check
      run: composer phpcs

    - name: PHPUnit
      run: composer test

    - name: Pre-release
      uses: marvinpinto/action-automatic-releases@latest
      if: startsWith(github.ref, 'refs/heads/master')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest
        prerelease: true
        title: Development Build
        files: ${{ steps.archive.outputs.name }}

    - name: Upload to stable release
      uses: svenstaro/upload-release-action@v1-release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.archive.outputs.name }}
        asset_name: ${{ steps.archive.outputs.name }}
        tag: ${{ github.ref }}
        overwrite: true
